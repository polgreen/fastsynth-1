Array size bounded to width 2
Solving query:
(set-logic ALL)
(declare-var x (Array Int Int))
(declare-var x! (Array Int Int))
(synth-fun inv-fn((parameter0 (Array Int Int)))Bool) 
(constraint (=> (and (and (= (select x (- (* 2 1) (+ 0 1 ))) (select x (- 1 (+ 0 1 )))) (= (select x (- (* 2 1) (+ 0 2 ))) (select x (- 1 (+ 0 1 )))) ) (and (= (select x (- (* 2 1) (+ 1 1 ))) (select x (- 1 (+ 1 1 )))) (= (select x (- (* 2 1) (+ 1 2 ))) (select x (- 1 (+ 1 1 )))) ) )(inv-fn x )))
(constraint (=> (inv-fn x )(and (= (select x (* 2 0)) (select x (+ (* 2 0) 1 ))) (= (select x (* 2 1)) (select x (+ (* 2 1) 1 ))) )))
(check-synth)

SyGuS solver says unknown 

Array size bounded to width 2
Solving query:
(set-logic ALL)
(declare-var x (Array Int Int))
(declare-var x! (Array Int Int))
(synth-fun inv-fn((parameter0 (Array Int Int)))Bool
((B Bool) (C Bool) (I Int))
((B Bool ((and B B) (or B B) (not B) (and C C) (or C C)))
(C Bool ((= I I) (<= I I) (>= I I)
))

(I Int (0 1 (- 1) (ite B I I)
(+ I I)
(- I)
(select parameter0 0)
(select parameter0 1)
))
)) 
(constraint (=> (and (and (= (select x (- (* 2 1) (+ 0 1 ))) (select x (- 1 (+ 0 1 )))) (= (select x (- (* 2 1) (+ 0 2 ))) (select x (- 1 (+ 0 1 )))) ) (and (= (select x (- (* 2 1) (+ 1 1 ))) (select x (- 1 (+ 1 1 )))) (= (select x (- (* 2 1) (+ 1 2 ))) (select x (- 1 (+ 1 1 )))) ) )(inv-fn x )))
(constraint (=> (inv-fn x )(and (= (select x (* 2 0)) (select x (+ (* 2 0) 1 ))) (= (select x (* 2 1)) (select x (+ (* 2 1) 1 ))) )))
(check-synth)

Inner synthesis phase failed or timed-out. Array size bounded to width 3
Solving query:
(set-logic ALL)
(declare-var x (Array Int Int))
(declare-var x! (Array Int Int))
(synth-fun inv-fn((parameter0 (Array Int Int)))Bool) 
(constraint (=> (and (and (= (select x (- (* 2 1) (+ 0 1 ))) (select x (- 1 (+ 0 1 )))) (= (select x (- (* 2 1) (+ 0 2 ))) (select x (- 1 (+ 0 1 )))) ) (and (= (select x (- (* 2 1) (+ 1 1 ))) (select x (- 1 (+ 1 1 )))) (= (select x (- (* 2 1) (+ 1 2 ))) (select x (- 1 (+ 1 1 )))) ) (and (= (select x (- (* 2 1) (+ 2 1 ))) (select x (- 1 (+ 2 1 )))) (= (select x (- (* 2 1) (+ 2 2 ))) (select x (- 1 (+ 2 1 )))) ) )(inv-fn x )))
(constraint (=> (inv-fn x )(and (= (select x (* 2 0)) (select x (+ (* 2 0) 1 ))) (= (select x (* 2 1)) (select x (+ (* 2 1) 1 ))) (= (select x (* 2 2)) (select x (+ (* 2 2) 1 ))) )))
(check-synth)

SyGuS solver says unknown 

Array size bounded to width 3
Solving query:
(set-logic ALL)
(declare-var x (Array Int Int))
(declare-var x! (Array Int Int))
(synth-fun inv-fn((parameter0 (Array Int Int)))Bool
((B Bool) (C Bool) (I Int))
((B Bool ((and B B) (or B B) (not B) (and C C) (or C C)))
(C Bool ((= I I) (<= I I) (>= I I)
))

(I Int (0 1 (- 1) (ite B I I)
(+ I I)
(- I)
(select parameter0 0)
(select parameter0 1)
(select parameter0 2)
))
)) 
(constraint (=> (and (and (= (select x (- (* 2 1) (+ 0 1 ))) (select x (- 1 (+ 0 1 )))) (= (select x (- (* 2 1) (+ 0 2 ))) (select x (- 1 (+ 0 1 )))) ) (and (= (select x (- (* 2 1) (+ 1 1 ))) (select x (- 1 (+ 1 1 )))) (= (select x (- (* 2 1) (+ 1 2 ))) (select x (- 1 (+ 1 1 )))) ) (and (= (select x (- (* 2 1) (+ 2 1 ))) (select x (- 1 (+ 2 1 )))) (= (select x (- (* 2 1) (+ 2 2 ))) (select x (- 1 (+ 2 1 )))) ) )(inv-fn x )))
(constraint (=> (inv-fn x )(and (= (select x (* 2 0)) (select x (+ (* 2 0) 1 ))) (= (select x (* 2 1)) (select x (+ (* 2 1) 1 ))) (= (select x (* 2 2)) (select x (+ (* 2 2) 1 ))) )))
(check-synth)

SyGuS solver says unknown 

Array size bounded to width 4
Solving query:
(set-logic ALL)
(declare-var x (Array Int Int))
(declare-var x! (Array Int Int))
(synth-fun inv-fn((parameter0 (Array Int Int)))Bool) 
(constraint (=> (and (and (= (select x (- (* 2 1) (+ 0 1 ))) (select x (- 1 (+ 0 1 )))) (= (select x (- (* 2 1) (+ 0 2 ))) (select x (- 1 (+ 0 1 )))) ) (and (= (select x (- (* 2 1) (+ 1 1 ))) (select x (- 1 (+ 1 1 )))) (= (select x (- (* 2 1) (+ 1 2 ))) (select x (- 1 (+ 1 1 )))) ) (and (= (select x (- (* 2 1) (+ 2 1 ))) (select x (- 1 (+ 2 1 )))) (= (select x (- (* 2 1) (+ 2 2 ))) (select x (- 1 (+ 2 1 )))) ) (and (= (select x (- (* 2 1) (+ 3 1 ))) (select x (- 1 (+ 3 1 )))) (= (select x (- (* 2 1) (+ 3 2 ))) (select x (- 1 (+ 3 1 )))) ) )(inv-fn x )))
(constraint (=> (inv-fn x )(and (= (select x (* 2 0)) (select x (+ (* 2 0) 1 ))) (= (select x (* 2 1)) (select x (+ (* 2 1) 1 ))) (= (select x (* 2 2)) (select x (+ (* 2 2) 1 ))) (= (select x (* 2 3)) (select x (+ (* 2 3) 1 ))) )))
(check-synth)

SyGuS solver says unknown 

Array size bounded to width 4
Solving query:
(set-logic ALL)
(declare-var x (Array Int Int))
(declare-var x! (Array Int Int))
(synth-fun inv-fn((parameter0 (Array Int Int)))Bool
((B Bool) (C Bool) (I Int))
((B Bool ((and B B) (or B B) (not B) (and C C) (or C C)))
(C Bool ((= I I) (<= I I) (>= I I)
))

(I Int (0 1 (- 1) (ite B I I)
(+ I I)
(- I)
(select parameter0 0)
(select parameter0 1)
(select parameter0 2)
(select parameter0 3)
))
)) 
(constraint (=> (and (and (= (select x (- (* 2 1) (+ 0 1 ))) (select x (- 1 (+ 0 1 )))) (= (select x (- (* 2 1) (+ 0 2 ))) (select x (- 1 (+ 0 1 )))) ) (and (= (select x (- (* 2 1) (+ 1 1 ))) (select x (- 1 (+ 1 1 )))) (= (select x (- (* 2 1) (+ 1 2 ))) (select x (- 1 (+ 1 1 )))) ) (and (= (select x (- (* 2 1) (+ 2 1 ))) (select x (- 1 (+ 2 1 )))) (= (select x (- (* 2 1) (+ 2 2 ))) (select x (- 1 (+ 2 1 )))) ) (and (= (select x (- (* 2 1) (+ 3 1 ))) (select x (- 1 (+ 3 1 )))) (= (select x (- (* 2 1) (+ 3 2 ))) (select x (- 1 (+ 3 1 )))) ) )(inv-fn x )))
(constraint (=> (inv-fn x )(and (= (select x (* 2 0)) (select x (+ (* 2 0) 1 ))) (= (select x (* 2 1)) (select x (+ (* 2 1) 1 ))) (= (select x (* 2 2)) (select x (+ (* 2 2) 1 ))) (= (select x (* 2 3)) (select x (+ (* 2 3) 1 ))) )))
(check-synth)

SyGuS solver says unknown 

Array size bounded to width 5
Solving query:
(set-logic ALL)
(declare-var x (Array Int Int))
(declare-var x! (Array Int Int))
(synth-fun inv-fn((parameter0 (Array Int Int)))Bool) 
(constraint (=> (and (and (= (select x (- (* 2 1) (+ 0 1 ))) (select x (- 1 (+ 0 1 )))) (= (select x (- (* 2 1) (+ 0 2 ))) (select x (- 1 (+ 0 1 )))) ) (and (= (select x (- (* 2 1) (+ 1 1 ))) (select x (- 1 (+ 1 1 )))) (= (select x (- (* 2 1) (+ 1 2 ))) (select x (- 1 (+ 1 1 )))) ) (and (= (select x (- (* 2 1) (+ 2 1 ))) (select x (- 1 (+ 2 1 )))) (= (select x (- (* 2 1) (+ 2 2 ))) (select x (- 1 (+ 2 1 )))) ) (and (= (select x (- (* 2 1) (+ 3 1 ))) (select x (- 1 (+ 3 1 )))) (= (select x (- (* 2 1) (+ 3 2 ))) (select x (- 1 (+ 3 1 )))) ) (and (= (select x (- (* 2 1) (+ 4 1 ))) (select x (- 1 (+ 4 1 )))) (= (select x (- (* 2 1) (+ 4 2 ))) (select x (- 1 (+ 4 1 )))) ) )(inv-fn x )))
(constraint (=> (inv-fn x )(and (= (select x (* 2 0)) (select x (+ (* 2 0) 1 ))) (= (select x (* 2 1)) (select x (+ (* 2 1) 1 ))) (= (select x (* 2 2)) (select x (+ (* 2 2) 1 ))) (= (select x (* 2 3)) (select x (+ (* 2 3) 1 ))) (= (select x (* 2 4)) (select x (+ (* 2 4) 1 ))) )))
(check-synth)

SyGuS solver says unknown 

Reached max array size 5
